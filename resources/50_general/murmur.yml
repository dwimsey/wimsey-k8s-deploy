#---
#apiVersion: v1
#kind: Namespace
#metadata:
#  labels:
#    kubernetes.io/metadata.name: murmur
#  name: murmur

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: murmur
  name: murmur
  namespace: murmur
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: murmur-tcp
    nodePort: 30817
    port: 64738
    protocol: TCP
    targetPort: 64738
  - name: murmur-udp
    nodePort: 30817
    port: 64738
    protocol: UDP
    targetPort: 64738
  - name: murmur-grpc
    nodePort: 30818
    port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: murmur
  sessionAffinity: None
  type: NodePort

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: murmur-db
  namespace: murmur
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: murmur
  name: murmur
  namespace: murmur
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: murmur
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: murmur
    spec:
      containers:
      - image: yhaenggi/murmur:1.3.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 64738
          timeoutSeconds: 1
        name: murmur-container
        ports:
        - containerPort: 50051
          protocol: TCP
        - containerPort: 64738
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 64738
          timeoutSeconds: 1
        resources: {}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 911
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /home/murmur/.murmur
          name: murmur-folder
        - mountPath: /home/murmur/.murmur/ssl
          name: murmur-tls
        - mountPath: /home/murmur/.murmur/db
          name: murmur-db
        - mountPath: /home/murmur/.murmur/murmur.ini
          name: murmur-config
          subPath: murmur.ini
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: murmur-folder
        emptydir: {}
      - name: murmur-tls
        secret:
          secretName: murmur-tls
      - name: murmur-db
        persistentVolumeClaim:
          claimName: murmur-db
      - name: murmur-config
        configMap:
          defaultMode: 420
          name: murmur-config

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: murmur-config
  namespace: murmur
data:
  murmur.ini: "; Murmur configuration file.\r\n;\r\n; General notes:\r\n; * Settings
    in this file are default settings and many of them can be overridden\r\n;   with
    virtual server specific configuration via the Ice or DBus interface.\r\n; * Due
    to the way this configuration file is read some rules have to be\r\n;   followed
    when specifying variable values (as in variable = value):\r\n;     * Make sure
    to quote the value when using commas in strings or passwords.\r\n;        NOT
    variable = super,secret BUT variable = \"super,secret\"\r\n;     * Make sure to
    escape special characters like '\\' or '\"' correctly\r\n;        NOT variable
    = \"\"\" BUT variable = \"\\\"\"\r\n;        NOT regex = \\w* BUT regex = \\\\w*\r\n\r\n;
    Path to database. If blank, will search for\r\n; murmur.sqlite in default locations
    or create it if not found.\r\ndatabase=/home/murmur/.murmur/db/murmur.sqlite\r\n\r\n; Murmur defaults to using SQLite
    with its default rollback journal.\r\n; In some situations, using SQLite's write-ahead
    log (WAL) can be\r\n; advantageous.\r\n; If you encounter slowdowns when moving
    between channels and similar\r\n; operations, enabling the SQLite write-ahead
    log might help.\r\n;\r\n; To use SQLite's write-ahead log, set sqlite_wal to one
    of the following\r\n; values:\r\n;\r\n; 0 - Use SQLite's default rollback journal.\r\n;
    1 - Use write-ahead log with synchronous=NORMAL.\r\n;     If Murmur crashes, the
    database will be in a consistent state, but\r\n;     the most recent changes might
    be lost if the operating system did\r\n;     not write them to disk yet. This
    option can improve Murmur's\r\n;     interactivity on busy servers, or servers
    with slow storage.\r\n; 2 - Use write-ahead log with synchronous=FULL.\r\n;     All
    database writes are synchronized to disk when they are made.\r\n;     If Murmur
    crashes, the database will be include all completed writes.\r\n;sqlite_wal=0\r\n\r\n;
    If you wish to use something other than SQLite, you'll need to set the name\r\n;
    of the database above, and also uncomment the below.\r\n; Sticking with SQLite
    is strongly recommended, as it's the most well tested\r\n; and by far the fastest
    solution.\r\n;\r\n;dbDriver=QMYSQL\r\n;dbUsername=\r\n;dbPassword=\r\n;dbHost=\r\n;dbPort=\r\n;dbPrefix=murmur_\r\n;dbOpts=\r\n\r\n;
    Murmur defaults to not using D-Bus. If you wish to use dbus, which is one of the\r\n;
    RPC methods available in Murmur, please specify so here.\r\n;\r\n;dbus=session\r\n\r\n;
    Alternate D-Bus service name. Only use if you are running distinct\r\n; murmurd
    processes connected to the same D-Bus daemon.\r\n;dbusservice=net.sourceforge.mumble.murmur\r\n\r\n;
    If you want to use ZeroC Ice to communicate with Murmur, you need\r\n; to specify
    the endpoint to use. Since there is no authentication\r\n; with ICE, you should
    only use it if you trust all the users who have\r\n; shell access to your machine.\r\n;
    Please see the ICE documentation on how to specify endpoints.\r\nice=\"tcp -h
    127.0.0.1 -p 6502\"\r\n\r\n; Ice primarily uses local sockets. This means anyone
    who has a\r\n; user account on your machine can connect to the Ice services.\r\n;
    You can set a plaintext \"secret\" on the Ice connection, and\r\n; any script
    attempting to access must then have this secret\r\n; (as context with name \"secret\").\r\n;
    Access is split in read (look only) and write (modify)\r\n; operations. Write
    access always includes read access,\r\n; unless read is explicitly denied (see
    note below).\r\n;\r\n; Note that if this is uncommented and with empty content,\r\n;
    access will be denied.\r\n\r\n;icesecretread=\r\nicesecretwrite=\r\n\r\n; If you
    want to expose Murmur's experimental gRPC API, you\r\n; need to specify an address
    to bind on.\r\n; Note: not all builds of Murmur support gRPC. If gRPC is not\r\n;
    available, Murmur will warn you in its log output.\r\n;grpc=\"127.0.0.1:50051\"\r\n;
    Specifying both a certificate and key file below will cause gRPC to use\r\n; secured,
    TLS connections.\r\n;grpccert=\"\"\r\n;grpckey=\"\"\r\n\r\n; Specifies the file
    Murmur should log to. By default, Murmur\r\n; logs to the file 'murmur.log'. If
    you leave this field blank\r\n; on Unix-like systems, Murmur will force itself
    into foreground\r\n; mode which logs to the console.\r\n;logfile=murmur.log\r\n\r\n;
    If set, Murmur will write its process ID to this file\r\n; when running in daemon
    mode (when the -fg flag is not\r\n; specified on the command line). Only available
    on\r\n; Unix-like systems.\r\n;pidfile=\r\n\r\n; The below will be used as defaults
    for new configured servers.\r\n; If you're just running one server (the default),
    it's easier to\r\n; configure it here than through D-Bus or Ice.\r\n;\r\n; Welcome
    message sent to clients when they connect.\r\n; If the welcome message is set
    to an empty string,\r\n; no welcome message will be sent to clients.\r\nwelcometext=\"<br
    />Welcome to the Wimsey Family <b>Murmur</b>.<br />Enjoy your stay!<br />\"\r\n\r\n;
    Port to bind TCP and UDP sockets to.\r\nport=64738\r\n\r\n; Specific IP or hostname
    to bind to.\r\n; If this is left blank (default), Murmur will bind to all available
    addresses.\r\n;host=\r\n\r\n; Password to join server.\r\nserverpassword=\r\n\r\n;
    Maximum bandwidth (in bits per second) clients are allowed\r\n; to send speech
    at.\r\nbandwidth=72000\r\n\r\n; Murmur and Mumble are usually pretty good about
    cleaning up hung clients, but\r\n; occasionally one will get stuck on the server.
    The timeout setting will cause\r\n; a periodic check of all clients who haven't
    communicated with the server in\r\n; this many seconds - causing zombie clients
    to be disconnected.\r\n;\r\n; Note that this has no effect on idle clients or
    people who are AFK. It will\r\n; only affect people who are already disconnected,
    and just haven't told the\r\n; server.\r\n;timeout=30\r\n\r\n; Maximum number
    of concurrent clients allowed.\r\nusers=100\r\n\r\n; Where users sets a blanket
    limit on the number of clients per virtual server,\r\n; usersperchannel sets a
    limit on the number per channel. The default is 0, for\r\n; no limit.\r\n;usersperchannel=0\r\n\r\n;
    Per-user rate limiting\r\n;\r\n; These two settings allow to configure the per-user
    rate limiter for some\r\n; command messages sent from the client to the server.
    The messageburst setting\r\n; specifies an amount of messages which are allowed
    in short bursts. The\r\n; messagelimit setting specifies the number of messages
    per second allowed over\r\n; a longer period. If a user hits the rate limit, his
    packages are then ignored\r\n; for some time. Both of these settings have a minimum
    of 1 as setting either to\r\n; 0 could render the server unusable.\r\nmessageburst=5\r\nmessagelimit=1\r\n\r\n;
    Respond to UDP ping packets.\r\n;\r\n; Setting to true exposes the current user
    count, the maximum user count, and\r\n; the server's maximum bandwidth per client
    to unauthenticated users. In the\r\n; Mumble client, this information is shown
    in the Connect dialog.\r\nallowping=true\r\n\r\n; Amount of users with Opus support
    needed to force Opus usage, in percent.\r\n; 0 = Always enable Opus, 100 = enable
    Opus if it's supported by all clients.\r\n;opusthreshold=100\r\n\r\n; Maximum
    depth of channel nesting. Note that some databases like MySQL using\r\n; InnoDB
    will fail when operating on deeply nested channels.\r\n;channelnestinglimit=10\r\n\r\n;
    Maximum number of channels per server. 0 for unlimited. Note that an\r\n; excessive
    number of channels will impact server performance\r\n;channelcountlimit=1000\r\n\r\n;
    Regular expression used to validate channel names.\r\n; (Note that you have to
    escape backslashes with \\ )\r\n;channelname=[ \\\\-=\\\\w\\\\#\\\\[\\\\]\\\\{\\\\}\\\\(\\\\)\\\\@\\\\|]+\r\n\r\n;
    Regular expression used to validate user names.\r\n; (Note that you have to escape
    backslashes with \\ )\r\n;username=[-=\\\\w\\\\[\\\\]\\\\{\\\\}\\\\(\\\\)\\\\@\\\\|\\\\.]+\r\n\r\n;
    If a user has no stored channel (they've never been connected to the server\r\n;
    before, or rememberchannel is set to false) and the client hasn't been given\r\n;
    a URL that includes a channel path, the default behavior is that they will\r\n;
    end up in the root channel.\r\n;\r\n; You can set this setting to a channel ID,
    and the user will automatically be\r\n; moved into that channel instead. Note
    that this is the numeric ID of the\r\n; channel, which can be a little tricky
    to get (you'll either need to use an\r\n; RPC mechanism, watch the console of
    a debug client, or root around through\r\n; the Murmur Database to get it).\r\n;\r\n;defaultchannel=0\r\n\r\n;
    When a user connects to a server they've already been on, by default the\r\n;
    server will remember the last channel they were in and move them to it\r\n; automatically.
    Toggling this setting to false will disable that feature.\r\n;\r\n;rememberchannel=true\r\n\r\n;
    Maximum length of text messages in characters. 0 for no limit.\r\n;textmessagelength=5000\r\n\r\n;
    Maximum length of text messages in characters, with image data. 0 for no limit.\r\n;imagemessagelength=131072\r\n\r\n;
    Allow clients to use HTML in messages, user comments and channel descriptions?\r\n;allowhtml=true\r\n\r\n;
    Murmur retains the per-server log entries in an internal database which\r\n; allows
    it to be accessed over D-Bus/ICE.\r\n; How many days should such entries be kept?\r\n;
    Set to 0 to keep forever, or -1 to disable logging to the DB.\r\n;logdays=31\r\n\r\n;
    To enable public server registration, the serverpassword must be blank, and\r\n;
    this must all be filled out.\r\n; The password here is used to create a registry
    for the server name; subsequent\r\n; updates will need the same password. Don't
    lose your password.\r\n; The URL is your own website, and only set the registerHostname
    for static IP\r\n; addresses.\r\n; Location is typically the country of typical
    users of the server, in\r\n; two-letter TLD style (ISO 3166-1 alpha-2 country
    code)\r\n;\r\n; If you only wish to give your \"Root\" channel a custom name,
    then only\r\n; uncomment the 'registerName' parameter.\r\n;\r\n;registerName=Mumble
    Server\r\n;registerPassword=secret\r\n;registerUrl=http://www.mumble.info/\r\n;registerHostname=\r\n;registerLocation=\r\n\r\n;
    If this option is enabled, the server will announce its presence via the\r\n;
    bonjour service discovery protocol. To change the name announced by bonjour\r\n;
    adjust the registerName variable.\r\n; See http://developer.apple.com/networking/bonjour/index.html
    for more information\r\n; about bonjour.\r\n;bonjour=True\r\n\r\n; If you have
    a proper SSL certificate, you can provide the filenames here.\r\n; Otherwise,
    Murmur will create its own certificate automatically.\r\n;sslCert=/home/murmur/.murmur/ssl/tls.crt\r\n;sslKey=/home/murmur/.murmur/ssl/tls.key\r\n\r\n;
    If the keyfile specified above is encrypted with a passphrase, you can enter\r\n;
    it in this setting. It must be plaintext, so you may wish to adjust the\r\n; permissions
    on your murmur.ini file accordingly.\r\n;sslPassPhrase=\r\n\r\n; If your certificate
    is signed by an authority that uses a sub-signed or\r\n; \"intermediate\" certificate,
    you probably need to bundle it with your\r\n; certificate in order to get Murmur
    to accept it. You can either concatenate\r\n; the two certificates into one file,
    or you can put it in a file by itself and\r\n; put the path to that PEM-file in
    sslCA.\r\n;sslCA=\r\n\r\n; The sslDHParams option allows you to specify a PEM-encoded
    file with\r\n; Diffie-Hellman parameters, which will be used as the default Diffie-\r\n;
    Hellman parameters for all virtual servers.\r\n;\r\n; Instead of pointing sslDHParams
    to a file, you can also use the option\r\n; to specify a named set of Diffie-Hellman
    parameters for Murmur to use.\r\n; Murmur comes bundled with the Diffie-Hellman
    parameters from RFC 7919.\r\n; These parameters are available by using the following
    names:\r\n;\r\n; @ffdhe2048, @ffdhe3072, @ffdhe4096, @ffdhe6144, @ffdhe8192\r\n;\r\n;
    By default, Murmur uses @ffdhe2048.\r\n;sslDHParams=@ffdhe2048\r\n\r\n; The sslCiphers
    option chooses the cipher suites to make available for use\r\n; in SSL/TLS. This
    option is server-wide, and cannot be set on a\r\n; per-virtual-server basis.\r\n;\r\n;
    This option is specified using OpenSSL cipher list notation (see\r\n; https://www.openssl.org/docs/apps/ciphers.html#CIPHER-LIST-FORMAT).\r\n;\r\n;
    It is recommended that you try your cipher string using 'openssl ciphers <string>'\r\n;
    before setting it here, to get a feel for which cipher suites you will get.\r\n;\r\n;
    After setting this option, it is recommend that you inspect your Murmur log\r\n;
    to ensure that Murmur is using the cipher suites that you expected it to.\r\n;\r\n;
    Note: Changing this option may impact the backwards compatibility of your\r\n;
    Murmur server, and can remove the ability for older Mumble clients to be able\r\n;
    to connect to it.\r\n;sslCiphers=EECDH+AESGCM:EDH+aRSA+AESGCM:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-SHA:AES128-SHA\r\n\r\n;
    If Murmur is started as root, which user should it switch to?\r\n; This option
    is ignored if Murmur isn't started with root privileges.\r\n;uname=\r\n\r\n; By
    default, in log files and in the user status window for privileged users,\r\n;
    Mumble will show IP addresses - in some situations you may find this unwanted\r\n;
    behavior. If obfuscate is set to true, Murmur will randomize the IP addresses\r\n;
    of connecting users.\r\n;\r\n; The obfuscate function only affects the log file
    and DOES NOT effect the user\r\n; information section in the client window.\r\n;obfuscate=false\r\n\r\n;
    If this options is enabled, only clients which have a certificate are allowed\r\n;
    to connect.\r\n;certrequired=False\r\n\r\n; If enabled, clients are sent information
    about the servers version and operating\r\n; system.\r\n;sendversion=True\r\n\r\n;
    You can set a recommended minimum version for your server, and clients will\r\n;
    be notified in their log when they connect if their client does not meet the\r\n;
    minimum requirements. suggestVersion expects the version in the format X.X.X.\r\n;\r\n;
    Note that the suggest* options appeared after 1.2.3 and will have no effect\r\n;
    on client versions 1.2.3 and earlier.\r\n;\r\n;suggestVersion=\r\n\r\n; Setting
    this to \"true\" will alert any user who does not have positional audio\r\n; enabled
    that the server administrators recommend enabling it. Setting it to\r\n; \"false\"
    will have the opposite effect - if you do not care whether the user\r\n; enables
    positional audio or not, set it to blank. The message will appear in\r\n; the
    log window upon connection, but only if the user's settings do not match\r\n;
    what the server requests.\r\n;\r\n; Note that the suggest* options appeared after
    1.2.3 and will have no effect\r\n; on client versions 1.2.3 and earlier.\r\n;\r\n;suggestPositional=\r\n\r\n;
    Setting this to \"true\" will alert any user who does not have Push-To-Talk\r\n;
    enabled that the server administrators recommend enabling it. Setting it to\r\n;
    \"false\" will have the opposite effect - if you do not care whether the user\r\n;
    enables PTT or not, set it to blank. The message will appear in the log\r\n; window
    upon connection, but only if the user's settings do not match what the\r\n; server
    requests.\r\n;\r\n; Note that the suggest* options appeared after 1.2.3 and will
    have no effect\r\n; on client versions 1.2.3 and earlier.\r\n;\r\n;suggestPushToTalk=\r\n\r\n;
    This sets password hash storage to legacy mode (1.2.4 and before)\r\n; (Note that
    setting this to true is insecure and should not be used unless absolutely necessary)\r\n;legacyPasswordHash=false\r\n\r\n;
    By default a strong amount of PBKDF2 iterations are chosen automatically. If >0
    this setting\r\n; overrides the automatic benchmark and forces a specific number
    of iterations.\r\n; (Note that you should only change this value if you know what
    you are doing)\r\n;kdfIterations=-1\r\n\r\n; In order to prevent misconfigured,
    impolite or malicious clients from\r\n; affecting the low-latency of other users,
    Murmur has a rudimentary global-ban\r\n; system. It's configured using the autobanAttempts,
    autobanTimeframe and\r\n; autobanTime settings.\r\n;\r\n; If a client attempts
    autobanAttempts connections in autobanTimeframe seconds,\r\n; they will be banned
    for autobanTime seconds. This is a global ban, from all\r\n; virtual servers on
    the Murmur process. It will not show up in any of the\r\n; ban-lists on the server,
    and they can't be removed without restarting the\r\n; Murmur process - just let
    them expire. A single, properly functioning client\r\n; should not trip these
    bans.\r\n;\r\n; To disable, set autobanAttempts or autobanTimeframe to 0. Commenting
    these\r\n; settings out will cause Murmur to use the defaults:\r\n;\r\n;autobanAttempts=10\r\n;autobanTimeframe=120\r\n;autobanTime=300\r\n\r\n;
    You can configure any of the configuration options for Ice here. We recommend\r\n;
    leave the defaults as they are.\r\n; Please note that this section has to be last
    in the configuration file.\r\n;\r\n[Ice]\r\nIce.Warn.UnknownProperties=1\r\nIce.MessageSizeMax=65536\r\n\r\n"
